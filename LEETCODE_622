class MyCircularQueue{
public:
    int front = -1;
    int rear = -1;
    vector<int> arr;
    MyCircularQueue(int k){
        arr = vector<int>(k);
        front = -1;
        rear = -1;
    }
    bool enQueue(int value){
        if (isFull())
        {
            return false;
        }
        rear = (rear + 1) % arr.size();
        arr[rear] = value;
        if (front == -1)
        {
            front = 0;
        }
        return true;
    }
    bool deQueue(){
        if (isEmpty())
        {
            return false;
        }
        int x = arr[front];
        if (front == rear)
        {
            front = -1;
            rear = -1;
        }
        else
        {
            front = (front + 1) % arr.size();
        }
        return true;
    }
    int Front(){
        if (front != -1)
        {
            return arr[front];
        }
        return -1;
    }
    int Rear(){
        if (rear != -1)
        {
            return arr[rear];
        }
        return -1;
    }
    bool isFull(){
        if ((rear + 1) % arr.size() == front)
        {
            return true;
        }
        return false;
    }
    bool isEmpty(){
        if (front == -1)
        {
            return true;
        }
        return false;
    }
};
